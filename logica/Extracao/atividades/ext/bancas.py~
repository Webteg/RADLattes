class Bancas:
	
	autores = None
	titulo = None
	local = None
	ano = None
	alunos = None

	def __init__(self, partesDoItem, nivel):		
		self.descricao = partesDoItem[1]
		self.tipo = nivel
		if 'Mestrado' in self.tipo:
			self.processaItem(partesDoItem)
			print '[MESTRADO....:]', self.alunos, self.titulo
		if 'Graduacao' in self.tipo:
			self.processaItem(partesDoItem)
			print '[GRADUACAO...:]', self.alunos, self.titulo, self.local, self.ano
		if 'Concurso' in self.tipo:
			partes = partesDoItem[1].rpartition(". ")
			if partes[1] == "":
				self.local = ""
				partes = partes[0]
			else:
				self.local = partes[2].strip().rstrip('.')
				
			partes = partes[0].rpartition(". ")
			if partes[1] == "":
				self.ano = ""
				partes = partes[0]
			else: 
				self.ano = partes[2]

			partes = partes[0].rpartition(". ")
			if partes[1] == "":
				self.titulo = ""
				partes = partes[0].strip()
			else: 
				self.titulo = partes[2]
				self.autores = partes[0]
			print '[CONCURSO....:]', self.titulo, self.ano, self.local
		if 'Outras' in self.tipo:
			print '[OUTRAS......:]', self.descricao
	
	def processaItem(self, partesDoItem):
		partes = partesDoItem[1].rpartition(". ")
		if partes[1] == "":
			self.local = ""
			partes = partes[0]
		else:
			p = partes[2].split('-')
			self.local = p[1].strip().rstrip('.')
			self.curso = p[0].split('(')[1].split(')')[0].split('em')[1]

			partes = partes[0].rpartition(". ")
			if partes[1] == "":
				self.ano = ""
				partes = partes[0]
			else: 
				self.ano = partes[2]

			partes = partes[0].rpartition(".")
			if partes[1] == "":
				self.titulo = ""
				partes = partes[0].strip()
			else: 
				self.titulo = partes[2]
				p = partes[0].partition("..")
				if p[1] == "":
					self.autores = partes[0]
					self.alunos = ""
				else:
					self.autores = p[0]
					alunos = p[2].split(',')
					if len(alunos) > 0:
						self.alunos = alunos
					else:
						self.alunos = p[2]	 	
	def __str__(self):
        	s  = "\n[PARTICIPACAO EM BANCAS] \n"
        	s += "+ TITULO     : " + str(self.titulo) + "\n"
        	s += "+ NIVEL      : " + str(self.nivel) + "\n"
		s += "+ LOCAL      : " + str(self.local) + "\n"
        	return s		
		
